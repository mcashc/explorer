<%- include("layout/header") %>
    
<p id="address" class="d-none"><%=address %></p>

<div class="container mt-5">
  <script>
    $(document).ready(function(){
        $("#copy").click(function(){
            var copyText = document.getElementById("address");
            var textArea = document.createElement("textarea");
            textArea.value = copyText.textContent;
            document.body.appendChild(textArea);
            textArea.select();
            document.execCommand("Copy");
            $.notify("Address Copied", "success");
            textArea.remove();
        });
   });
  </script>

<script type="text/javascript" language="javascript" class="init">
  var address = $("#address").text();
  $.ajax({
          method:'GET',
          url:'/api/addressinfo/'+address,
          beforeSend: function() {
          $("#loaderDiv").show();
          },
          success:function(res){
              $("#balance").html(res.balance);
              $("#totalin").html(res.totalin);
              $("#totalout").html(res.totalout);
              $("#trxcount").html(res.transactions.length)
          }
  });
  </script>

  <div class="row">
    <ul class="list-group" style="display: inline-block;overflow: hidden; ">
      <li class="list-group-item">
          <div class="row">
              <div class="col-md-4">
                  Address
              </div>
              <script>
                  $(document).ready(function(){
                      $("#copy").click(function(){
                          var copyText = document.getElementById("address");
                          var textArea = document.createElement("textarea");
                          textArea.value = copyText.textContent;
                          document.body.appendChild(textArea);
                          textArea.select();
                          document.execCommand("Copy");
                          $.notify("Address Copied", "success");
                          textArea.remove();
                      });
                 });
              </script>
              <div class="col-md-8" >
                  <span id="address"><%=address %></span> <i class="fa fa-copy" type="button" id="copy" style="cursor: pointer;"></i>
            </div>
          </div>
        </li>

      <li class="list-group-item">
          <div class="row">
              <div class="col-md-4">
                 Total Received
              </div>
              <div class="col-md-8" id="totalin">
                  
            </div>
          </div>
        </li>
      <li class="list-group-item">
          <div class="row">
              <div class="col-md-4">
                  Total Sent
              </div>
              <div class="col-md-8" id="totalout">
                  
            </div>
          </div>
        </li>
        <li class="list-group-item">
          <div class="row">
              <div class="col-md-4">
                  Total transactions
              </div>
              <div class="col-md-8" id="trxcount">
                  
            </div>
          </div>
        </li>
        <li class="list-group-item">
          <div class="row">
              <div class="col-md-4">
                Final Balance
              </div>
              <div class="col-md-8" id="balance">
                  
            </div>
          </div>
        </li>
  </ul>
  </div>
  <script type="text/babel">
    var address = $("#address").text();
    class App extends React.Component{
        constructor(props) {
            super(props);
            this.state={
                data:[],
                countt:20,
                balance:0,totalin:0,totalout:0,address:'',
                loader:true
            }
        }
        componentDidMount() {
            const config = {headers : {'content-type':'multipart/form-data'}}
            axios.get("/api/addressinfo/"+address,config)
            .then(res=>{
                console.log(res.data)
                this.setState({data:res.data["transactions"],
                balance:res.data["balance"],
                totalin:res.data["totalin"],
                totalout:res.data["totalout"],
                address:res.data["address"],
                loader:false})
                console.log(address)
            })
            .catch(error=>{
                console.log(error)
            })
        }

        loadMore=()=>{
          const ct = parseFloat(this.state.countt)+50
          this.setState({countt:ct})
          console.log(ct)
        }

        render(){
            var icount=0
            const trxlist = this.state.data.map(value=>{
                icount+=1
                if(icount<=this.state.countt){
                       var localTime  = moment.utc(value.blocktime).toDate();
                       return(
                           <tr>
                            <td><a href={"/explorer/trx/"+value.trxhash}>{value.trxhash.substring(0, 20)}...</a></td>
                            {address==value.from_address ?
                                 <td><p className="bg-danger text-white p-1 rounded"> -{value.amountin }</p></td>
                                 :
                                   <td><p className="bg-success text-white p-1 rounded">+{value.amountout }</p></td>
                                }
                            {value.from_address=="coinbase" ?
                                <td>COINBASE (Newly Generated Coins)</td>
                                :
                                <td><a href={"/explorer/address/"+value.from_address}>{value.from_address.substring(0, 20)}...</a></td>
                            }
                            <td><a href={"/explorer/address/"+value.to_address}>{value.to_address.substring(0, 20)}...</a></td>
                            <td>{value.fee}</td>
                            {value.status==0 ?
                                <td > Pending</td>
                                :
                                <td >Confirmed</td>
                              }
                            <td>{moment(localTime).fromNow()}</td>
                           </tr>
                       )
                        }
                    })
                
            return(
                <React.Fragment>
                  <div className="row">
            <div className="table-responsive" >
            <h3 className="mt-5">Transactions </h3>
            <table className="table mb-5" id="trxTable">
                <tbody>
                  <tr>
                  <th>Trx Hash</th>
                  <th>Amount Transacted</th>
                  <th>From</th>
                  <th>To</th>
                  <th>Txn Fee</th>
                  <th>Status</th>
                  <th>Time UTC </th>
                </tr>
                {trxlist}
                </tbody>
       

            </table>
            <button className="btn btn-primary" onClick={this.loadMore.bind()} style={{float:"right"}}>Load More</button>
           </div>
      </div>
  
                  <div className="d-flex justify-content-center">
                    {this.state.loader==true?<div id="loaderDiv" className="spinner-border text-danger  mt-5 mb-5 " role="status">
                        <span className="sr-only">Loading...</span>
                    </div>:
                   ""
                  }
                 </div>   
                </React.Fragment>
            )
        }

    }

    ReactDOM.render(<App/>,document.getElementById('app'));
</script>
<div id="app"></div>

</div>


<%- include("layout/footer") %>
